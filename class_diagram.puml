@startuml

skinparam classAttributeIconSize 0

abstract class Creature {
  - nickname: str
  - desc: str
  - loc: Location
  + nickname()
  + nickname(new_nickname)
  + desc()
  + desc(new_description)
  + loc()
  + loc(new_location)
  + inspect()
}

class Pymon {
  - battle_stats: list
  - energy: int
  - inventory: list
  - has_immunity: bool
  - move_count: int
  - wins: int
  - losses: int
  - draws: int
  - current_battle_opponent: str
  - last_battle_timestamp: str
  + battle_stats()
  + battle_stats(new_stats)
  + energy()
  + energy(new_energy)
  + inventory()
  + inventory(new_inventory)
  + has_immunity()
  + has_immunity(new_immunity)
  + move_count()
  + move_count(new_move_count)
  + pick_item(item)
  + view_inventory()
  + move(direction)
  + display_new_location()
  + decrease_energy()
  + handle_energy_depletion()
  + inspect()
  + challenge(creature)
  + get_player_choice()
  + get_move_opponent()
  + update_battle_results(res)
  + generate_stats()
  + handle_outcome(creature)
  + capture(creature)
  + display_battle_stats()
  + battle_judge(player_choice, opponent_choice)
  + use_item(item)
  + view_curr_loc()
}

class Animal {
  + inspect()
}

class Item {
  - name: str
  - desc: str
  - is_pickable: bool
  - is_consumable: bool
  - effect: str
  + name()
  + name(new_name)
  + desc()
  + desc(new_desc)
  + is_pickable()
  + is_pickable(is_pickable)
  + is_consumable()
  + is_consumable(is_consumable)
  + effect()
  + effect(new_effect)
}

class Location {
  - name: str
  - desc: str
  - doors: Direction
  - creatures: list
  - items: list
  + name()
  + name(new_name)
  + desc()
  + desc(new_description)
  + doors()
  + doors(new_doors)
  + creatures()
  + creatures(new_creatures)
  + items()
  + items(new_items)
  + add_creature(creature)
  + add_item(item)
  + inspect()
}

class Direction {
  - west: str|Location
  - north: str|Location
  - east: str|Location
  - south: str|Location
  + west()
  + west(new_west)
  + north()
  + north(new_north)
  + east()
  + east(new_east)
  + south()
  + south(new_south)
  + to_dict()
}

class GameState {
  - {static} instance: GameState
  - {static} MAX_ENERGY: int
  - items: dict
  - pymons: dict
  - user_pymon: dict
  - bench_pymons: list
  - locations: dict
  - creatures: dict
  + save_game(file_path)
  + load_game(file_path)
  - __parse_line(line)
  - __parse_inventory(inventory_str)
  - __save_items(f)
  - __save_locations(f)
  - __save_creatures(f)
  - __save_user_pymon(f)
  - __save_stats_battle(f, battle_stats)
  - __save_bench(f)
  + load_item_data(line)
  + load_loc(line)
  + load_creature(line)
  + load_user_pymon(lines)
  + load_battle_stats(line, battle_stats)
  + load_bench(line)
}

class Operation {
  - {static} instance: Operation
  - pymon: Pymon
  - record: Record
  - game_state: GameState
  + menu()
  + display_setup()
  + move_pymon()
  + pick_item()
  + view_inventory()
  + challenge_creature()
  + save_game()
  + load_game()
  + generate_stats()
  + add_custom_location()
  + add_creature()
  + find_item_in_locations(item_name)
  + set_inventory(new_pymon, selected_pymon)
  + switch_pymon(index, selected_pymon)
  + save_current_pymon()
  + create_new_pymon(selected_pymon)
  + set_stats(new_pymon, selected_pymon)
}

class Record {
  - locations: list
  - creatures: list
  - game_state: GameState
  + load_data(locations_file, creatures_file, items_file)
  + load_locations(file_path)
  + load_creatures(file_path)
  + find_location(name)
  + find_item_in_locations(item_name)
  + transfer_item(item, from_location, to_pymon)
  + set_inventory(new_pymon, selected_pymon)
  + save_game_state(file_path, pymon)
  + load_game_state(file_path)
}

class GameLoader {
  - {static} instance: GameLoader
  + load_record(args)
  + show_help()
  + start(args)
}

package "Exceptions" {
  class GameError {
    + __init__(msg)
  }
  class InvalidDirectionException {
    + __init__(msg)
  }
  class InvalidInputFileFormat {
    + __init__(msg)
  }
  class AnimalCaptureError {
    + __init__()
  }
}

' Inheritance relationships
Creature <|-- Pymon
Creature <|-- Animal
GameError <|-- InvalidDirectionException
GameError <|-- InvalidInputFileFormat
GameError <|-- AnimalCaptureError

' Associations
Pymon "1" *-- "0..*" Item : contains >
Location "1" *-- "0..*" Item : contains >
Location "1" *-- "0..*" Creature : contains >
Location "1" *-- "1" Direction : has >
Creature "0..1" -- "1" Location : located in >
Operation "1" -- "1" Pymon : manages >
Operation "1" -- "1" Record : uses >
Operation "1" -- "1" GameState : uses >
Record "1" -- "1..*" Location : tracks >
Record "1" -- "1..*" Creature : tracks >
Record "1" -- "1" GameState : uses >

note "Singleton" as N1
GameState .. N1
Operation .. N1
GameLoader .. N1

@enduml
